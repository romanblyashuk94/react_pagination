{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pageNums","pagesCounter","Math","ceil","i","push","handlePageNumClick","num","length","className","classNames","disabled","href","onClick","map","active","items","from","to","numbers","n","getNumbers","App","useState","setCurrentPage","setPerPage","slice","visibleItems","setVisibleItems","firstVisibleItem","lastVisibleItem","min","id","value","onChange","event","newPerPage","Number","target","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GASpC,IAJK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAqB,GACrBC,EAAeC,KAAKC,KAAKP,EAAQC,GAE9BO,EAAI,EAAGA,GAAKH,EAAcG,GAAK,EACtCJ,EAASK,KAAKD,GAGhB,IAAME,EAAqB,SAACC,GACtBA,IAAQT,GAAeS,EAAM,GAAKA,GAAOP,EAASQ,QACpDT,EAAaQ,IAIjB,OACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBb,IAFd,SAKE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBd,EACfe,QAAS,kBAAMP,EAAmBR,EAAc,IALlD,oBAUDE,EAASc,KAAI,SAAAP,GAAG,OACf,oBAEEE,UAAWC,IACT,YACA,CAAEK,OAAQR,IAAQT,IAJtB,SAOE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAI,WAAML,GACVM,QAAS,kBAAMP,EAAmBC,IAJpC,SAMGA,KAZEA,MAgBT,oBAAIE,UAAWC,IACb,YACA,CAAEC,SAAUb,IAAgBE,EAASQ,SAFvC,SAKE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAed,IAAgBE,EAASQ,OACxCK,QAAS,kBAAMP,EAAmBR,EAAc,IALlD,wBC/DR,IAAMkB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQd,KAAKe,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBP,KAAI,SAAAM,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOzB,EAAP,KAAoB0B,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAO1B,EAAP,KAAgB4B,EAAhB,KACA,EAAwCF,mBAASP,EAAMU,MAAM,EAAG7B,IAAhE,mBAAO8B,EAAP,KAAqBC,EAArB,KAgBMC,GAAoB/B,EAAc,GAAKD,EAAU,EACjDiC,EAAkB5B,KAAK6B,IAAKjC,EAAcD,EAAUmB,EAAMR,QAEhE,OACE,sBAAKC,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,mBACiC+B,EADjC,cACuDC,EADvD,eAC6Ed,EAAMR,OADnF,OAIA,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,MAAOpC,EACPqC,SAhCiB,SAACC,GAC1B,IAAMC,EAAaC,OAAOF,EAAMG,OAAOL,OAEvCR,EAAWW,GACXZ,EAAe,GACfI,EAAgBZ,EAAMU,MAAM,EAAGU,KAsBzB,UAOE,wBAAQH,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOM,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAAOoB,EAAMR,OACbX,QAASA,EACTC,YAAaA,EACbC,aA1CmB,SAACyC,GACxBhB,EAAegB,GACfZ,EAAgBZ,EACbU,OAAOc,EAAO,GAAK3C,EAAS2C,EAAO3C,OA0CpC,6BACG8B,EAAab,KAAI,SAAA2B,GAAI,OAAI,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YEjE3CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0a862880.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageNums: number[] = [];\n  const pagesCounter = Math.ceil(total / perPage);\n\n  for (let i = 1; i <= pagesCounter; i += 1) {\n    pageNums.push(i);\n  }\n\n  const handlePageNumClick = (num: number) => {\n    if (num !== currentPage && num > 0 && num <= pageNums.length) {\n      onPageChange(num);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: currentPage === 1 },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => handlePageNumClick(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {pageNums.map(num => (\n        <li\n          key={num}\n          className={classNames(\n            'page-item',\n            { active: num === currentPage },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${num}`}\n            onClick={() => handlePageNumClick(num)}\n          >\n            {num}\n          </a>\n        </li>\n      ))}\n      <li className={classNames(\n        'page-item',\n        { disabled: currentPage === pageNums.length },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageNums.length}\n          onClick={() => handlePageNumClick(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const [visibleItems, setVisibleItems] = useState(items.slice(0, perPage));\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newPerPage = Number(event.target.value);\n\n    setPerPage(newPerPage);\n    setCurrentPage(1);\n    setVisibleItems(items.slice(0, newPerPage));\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n    setVisibleItems(items\n      .slice((page - 1) * perPage, page * perPage));\n  };\n\n  const firstVisibleItem = (currentPage - 1) * perPage + 1;\n  const lastVisibleItem = Math.min((currentPage * perPage), items.length);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstVisibleItem} - ${lastVisibleItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleSelectChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length} // total number of items to paginate\n        perPage={perPage} // number of items per page\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {visibleItems.map(item => <li key={item} data-cy=\"item\">{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}