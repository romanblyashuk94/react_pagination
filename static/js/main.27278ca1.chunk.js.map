{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","memo","total","itemsPerPage","currentPage","onPageChange","pageNums","pagesCounter","useMemo","Math","ceil","i","push","handlePageNumClick","useCallback","num","length","isFirstPageActive","isLastPageActive","className","cn","disabled","href","onClick","map","active","items","from","to","numbers","n","getNumbers","App","useState","setCurrentPage","setItemsPerPage","visibleItems","setVisibleItems","useEffect","initialVisibleItems","slice","handleSelectChange","event","newItemsPerPage","Number","target","value","firstVisibleItem","lastVisibleItem","min","id","onChange","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27278ca1.chunk.js","sourcesContent":["import cn from 'classnames';\nimport {\n  FC, memo, useCallback, useMemo,\n} from 'react';\n\ntype Props = {\n  total: number,\n  itemsPerPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: FC<Props> = memo(({\n  total,\n  itemsPerPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageNums: number[] = [];\n  const pagesCounter = useMemo(() => {\n    return Math.ceil(total / itemsPerPage);\n  }, [total, itemsPerPage]);\n\n  for (let i = 1; i <= pagesCounter; i += 1) {\n    pageNums.push(i);\n  }\n\n  const handlePageNumClick = useCallback((num: number) => {\n    if (num !== currentPage && num > 0 && num <= pageNums.length) {\n      onPageChange(num);\n    }\n  }, [currentPage, pageNums]);\n\n  const isFirstPageActive = useMemo(() => currentPage === 1, [currentPage]);\n  const isLastPageActive = useMemo(() => (\n    currentPage === pageNums.length\n  ), [currentPage]);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn(\n        'page-item',\n        { disabled: isFirstPageActive },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPageActive}\n          onClick={() => handlePageNumClick(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {pageNums.map(num => (\n        <li\n          key={num}\n          className={cn(\n            'page-item',\n            { active: num === currentPage },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${num}`}\n            onClick={() => handlePageNumClick(num)}\n          >\n            {num}\n          </a>\n        </li>\n      ))}\n      <li className={cn(\n        'page-item',\n        { disabled: isLastPageActive },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPageActive}\n          onClick={() => handlePageNumClick(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n});\n","import React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [visibleItems, setVisibleItems] = useState<string[]>([]);\n\n  useEffect(() => {\n    const initialVisibleItems = items.slice(0, itemsPerPage);\n\n    setVisibleItems(initialVisibleItems);\n  }, []);\n\n  const handleSelectChange = useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) => {\n      const newItemsPerPage = Number(event.target.value);\n\n      setItemsPerPage(newItemsPerPage);\n      setCurrentPage(1);\n      setVisibleItems(items.slice(0, newItemsPerPage));\n    },\n    [],\n  );\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n    setVisibleItems(items\n      .slice((page - 1) * itemsPerPage, page * itemsPerPage));\n  };\n\n  const firstVisibleItem = useMemo(() => {\n    return (currentPage - 1) * itemsPerPage + 1;\n  }, [currentPage, itemsPerPage]);\n\n  const lastVisibleItem = useMemo(() => {\n    return Math.min((currentPage * itemsPerPage), items.length);\n  }, [currentPage, itemsPerPage, items]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstVisibleItem} - ${lastVisibleItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleSelectChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length} // total number of items to paginate\n        itemsPerPage={itemsPerPage} // number of items per page\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {visibleItems.map(item => <li key={item} data-cy=\"item\">{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}